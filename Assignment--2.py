# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11_8iosKq9VXt_g0slT9fIQBIxU-wvZrs
"""

# -*- coding: utf-8 -*-
""" Code for Assingment-2 
Automatic generation  in Colaboratory.
Original file at
   https://colab.research.google.com/drive/11_8iosKq9VXt_g0slT9fIQBIxU-wvZrs
"""

import random
#let us repeat the experiment of tossing the coin till the first head appears for 100000 times
n_simulations=100000
total = 0

def first_head():
    global total
    for i in range (n_simulations):
#Let a,b,c,d represent the probability of getting the first head after 1st,3rd,5th,.. trails.
        a=random.randint(0,1)
        b=random.randint(0,1)
        c=random.randint(0,1)
        d=random.randint(0,1)
        e=random.randint(0,1)
        f=random.randint(0,1)
        
        
#Increase the total by the respective number when the first head is obtained at odd trails.        
        if a == 0:
            total += 1 
            
        if b == 0:
            total += 0.25
            
        if c == 0:
            total += 0.0625
            
        if d == 0:
            total += 0.015625
            
        if e == 0:
            total += 0.0039 
            
        if f == 0:
            total += 0.0009765 
            
        
print('The probability that the first head appears after odd number of trails is :')
first_head()
strng = total/n_simulations
print(strng)

print('The theriotical probability of getting the first head after odd number of trails is 0.6666 ')
#Thus we can say that the experimental value is much close to the theoritical value.